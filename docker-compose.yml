#docker-compose.yml
version: '3.0'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env.example
    container_name: kupipodariday-backend
    depends_on:
      - database
    restart: always
    networks:
      - database
      - default

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kupipodariday-frontend

  database:
    image: postgres:12
    container_name: kupipodariday-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-student}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-student}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-kupipodariday}
    volumes:
      - pgdata:${POSTGRES_PGDATA:-/var/lib/postgresql/data}
    restart: always
    networks:
      - database
#настройки контейнера nginx docker-compose.yml
  nginx:
    image: nginx:latest
    volumes:
      - ./backend/nginx/conf.d/backend.conf:/etc/nginx/conf.d/backend.conf
      - ./frontend/nginx/conf.d/frontend.conf:/etc/nginx/conf.d/frontend.conf
      - certs:/etc/letsencrypt
    ports:
      - 8080:8080
      - 8081:8081
      - 8443:443
    depends_on:
      - frontend
      - backend

volumes:
  pgdata:
  certs:

networks:
  database:
    driver: bridge
